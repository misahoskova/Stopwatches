<!DOCTYPE html>
<html lang="cs">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Stopwatches</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
</head>
<body>
  <nav class="navbar" role="navigation" aria-label="main navigation">
  <div class="navbar-brand">
    <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navbarBasicExample">
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
    </a>
  </div>

  <div id="navbarBasicExample" class="navbar-menu">
    <div class="navbar-end">
      <a class="navbar-item" href="/history" class="button is-info">Show history</a>
        <form action="/logout" method="POST">
    <button class="button is-info navbar-item" type="submit">Logout</button>
  </form>
        </div>
      </div>
    </div>

    <!-- <div class="navbar-end">
      <div class="navbar-item">
        <div class="buttons">
          <a class="button is-primary">
            <strong>Sign up</strong>
          </a>
          <a class="button is-light">
            Log in
          </a>
        </div>
      </div>
    </div> -->
  </div>
</nav>
  <section class="section is-centered">
    <div class="column is-centered">
      <h1 class="title">Stopwatches</h1>

      <!-- Timer -->
      <div class="box has-text-centered">
        <h2 id="timer" class="subtitle">
          <%= formattedElapsed %>
        </h2>
      </div>

      <!-- Start / Pause -->
      <div class="buttons is-centered">
        <form action="/api/stopwatch/start" method="post" style="display:inline"
              onsubmit="document.getElementById('startBtn').disabled = true">
          <button id="startBtn" class="button is-primary" type="submit"
                  <%= isRunning ? 'disabled' : '' %>>
            Start/Restart
          </button>
        </form>

        <form action="/api/stopwatch/stop" method="post" style="display:inline"
              onsubmit="document.getElementById('pauseBtn').disabled = true">
          <button id="pauseBtn" class="button is-danger" type="submit"
                  <%= !isRunning ? 'disabled' : '' %>>
            Pause
          </button>
        </form>
      </div>

      <!-- Save Form -->
      <form action="/api/stopwatch/save" method="post" onsubmit="document.getElementById('saveBtn').disabled = true">
        <div class="field">
          <label class="label">Description</label>
          <div class="control">
            <input name="description" class="input" type="text" value="<%= description %>" required>
          </div>
        </div>

        <div class="columns">
          <div class="column">
            <div class="field">
              <label class="label">Start</label>
              <div class="control">
                <input name="start" class="input" type="text" readonly value="<%= formattedStartTime %>">
              </div>
            </div>
          </div>
          <div class="column">
            <div class="field">
              <label class="label">End</label>
              <div class="control">
                <input name="end" class="input" type="text" readonly value="<%= formattedEndTime %>">
              </div>
            </div>
          </div>
        </div>

        <div class="field">
          <label class="label">Duration</label>
          <div class="control">
            <input name="duration" class="input" type="text" readonly value="<%= formattedDuration %>">
          </div>
        </div>

        <div class="buttons is-centered">
<button
  id="saveBtn"
  class="button is-success"
  type="submit"
  <%= isStopped ? '' : 'disabled' %>
  onsubmit="this.disabled=true"
>
  Save
</button>
        </div>
      </form>
    </div>
  </section>

  <!-- Polling elapsed -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const timerEl = document.getElementById('timer');
      setInterval(async () => {
        try {
          const res = await fetch('/api/stopwatch/elapsed');
          if (!res.ok) return;
          const { formattedElapsed } = await res.json();
          timerEl.textContent = formattedElapsed;
        } catch {}
      }, 1000);
    });
  </script>
</body>
</html>